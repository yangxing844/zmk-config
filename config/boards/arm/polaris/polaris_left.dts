/dts-v1/;
#include "polaris.dtsi"
#include <dt-bindings/led/led.h>

/ {
};

&pinctrl {
    spi2_default: spi2_default {
				group1 {
						psels = <NRF_PSEL(SPIM_MOSI, 0, 6)>,
						<NRF_PSEL(SPIM_SCK, 0, 26)>;
				};
		};
	
    spi2_sleep: spi2_sleep {
				group1 {
						psels = <NRF_PSEL(SPIM_MOSI, 0, 6)>,
						<NRF_PSEL(SPIM_SCK, 0, 26)>;
						low-power-enable;
				};
		};

    spi3_default: spi3_default {
				group1 {
						psels = <NRF_PSEL(SPIM_MOSI, 0, 25)>;
				};
		};
	
    spi3_sleep: spi3_sleep {
				group1 {
						psels = <NRF_PSEL(SPIM_MOSI, 0, 25)>;
						low-power-enable;
				};
		};
    i2c1_default: i2c1_default {
        group1 {
            psels = <NRF_PSEL(TWIM_SDA, 0, 12)>,
                <NRF_PSEL(TWIM_SCL, 1,  9)>;
						bias-pull-up;
        };
    };

    i2c1_sleep: i2c1_sleep {
        group1 {
            psels = <NRF_PSEL(TWIM_SDA, 0, 12)>,
                <NRF_PSEL(TWIM_SCL, 1, 9)>;
            low-power-enable;
						bias-pull-up;
        };
    };
};


lpm_view_spi: &spi2 {
    compatible = "nordic,nrf-spim";
    pinctrl-0 = <&spi2_default>;
    pinctrl-1 = <&spi2_sleep>;
    pinctrl-names = "default", "sleep";
    cs-gpios = <&gpio1 10 (GPIO_ACTIVE_HIGH | GPIO_PULL_DOWN) >;
};

nice_view_spi: &spi2 {
    compatible = "nordic,nrf-spim";
    pinctrl-0 = <&spi2_default>;
    pinctrl-1 = <&spi2_sleep>;
    pinctrl-names = "default", "sleep";
    cs-gpios = <&gpio1 10 (GPIO_ACTIVE_HIGH | GPIO_PULL_DOWN) >;
};



&spi3 {
	compatible = "nordic,nrf-spim";
	status = "okay";
	pinctrl-0 = <&spi3_default>;
	pinctrl-1 = <&spi3_sleep>;
	pinctrl-names = "default", "sleep";

	led_strip: ws2812@0 {
				compatible ="worldsemi,ws2812-spi";
        /* SPI */
        reg = <0>; /* ignored, but necessary for SPI bindings */
        spi-max-frequency = <4000000>;

        /* WS2812 */
        chain-length = <25>; /* arbitrary; change at will */
        spi-one-frame = <0x70>;
        spi-zero-frame = <0x40>;

        color-mapping = <LED_COLOR_ID_GREEN LED_COLOR_ID_RED LED_COLOR_ID_BLUE>;
		};
};

&left_encoder {
    status = "okay";
};

&physical_layout0 {
  	kscan = <&kscan0>;
};

/ {
	chosen {
		zmk,physical-layout = &physical_layout0;
    zmk,underglow = &led_strip;
		zmk,battery =&vbatt;
	};
    vbatt: vbatt {
        compatible = "zmk,battery-nrf-vddh";
    };
    kscan0: kscan {
		compatible = "zmk,kscan-gpio-direct";
		wakeup-source;
		input-gpios
			= <&gpio1  1 (GPIO_ACTIVE_LOW | GPIO_PULL_UP)>  //19
			, <&gpio1	 2 (GPIO_ACTIVE_LOW | GPIO_PULL_UP)> //18
			, <&gpio1	 4 (GPIO_ACTIVE_LOW | GPIO_PULL_UP)>  //13
			, <&gpio1  6 (GPIO_ACTIVE_LOW | GPIO_PULL_UP)>  //12
			, <&gpio1  7 (GPIO_ACTIVE_LOW | GPIO_PULL_UP)>  //5
			, <&gpio0  9 (GPIO_ACTIVE_LOW | GPIO_PULL_UP)> //4
			, <&gpio0  10 (GPIO_ACTIVE_LOW | GPIO_PULL_UP)> //ex1
			, <&gpio0	 13 (GPIO_ACTIVE_LOW | GPIO_PULL_UP)>  //20
			, <&gpio0  15 (GPIO_ACTIVE_LOW | GPIO_PULL_UP)>  //17
			, <&gpio0  17 (GPIO_ACTIVE_LOW | GPIO_PULL_UP)>  //14
			, <&gpio0  20 (GPIO_ACTIVE_LOW | GPIO_PULL_UP)>  //11
			, <&gpio0 22 (GPIO_ACTIVE_LOW | GPIO_PULL_UP)> //6
			, <&gpio0 24 (GPIO_ACTIVE_LOW | GPIO_PULL_UP)>  //3
			, <&gpio1 0 (GPIO_ACTIVE_LOW | GPIO_PULL_UP)> //ex2
			, <&gpio0 11  (GPIO_ACTIVE_LOW | GPIO_PULL_UP)>  //21
			, <&gpio0 14 (GPIO_ACTIVE_LOW | GPIO_PULL_UP)> //16
			, <&gpio0 16 (GPIO_ACTIVE_LOW | GPIO_PULL_UP)>  //15
			, <&gpio0 19 (GPIO_ACTIVE_LOW | GPIO_PULL_UP)>  //10
			, <&gpio0 21 (GPIO_ACTIVE_LOW | GPIO_PULL_UP)>  //7
			, <&gpio0 23 (GPIO_ACTIVE_LOW | GPIO_PULL_UP)> //2
			, <&gpio1 12 (GPIO_ACTIVE_LOW | GPIO_PULL_UP)> //ex3
			, <&gpio1 8 (GPIO_ACTIVE_LOW | GPIO_PULL_UP)> // 9
			, <&gpio0 27 (GPIO_ACTIVE_LOW | GPIO_PULL_UP)> // 8
			 ,<&gpio0 29 (GPIO_ACTIVE_LOW | GPIO_PULL_UP)> //1
			 ,<&gpio0 31 (GPIO_ACTIVE_LOW | GPIO_PULL_UP)> //1
		;
    };
};
